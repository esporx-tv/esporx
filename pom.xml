<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>tv.esporx</groupId>
	<artifactId>esporx-all</artifactId>
	<version>0.9-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>esporx-all</name>

	<modules>
		<module>esporx-webapp</module>
		<module>esporx-db-migrations</module>
	</modules>

	<!-- shared settings -->
	<repositories>
		<repository>
			<id>spring-maven-snapshot</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<name>Springframework Maven SNAPSHOT Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>bees-plugins-snapshots</id>
			<url>http://repository-cloudbees.forge.cloudbees.com/public-snapshot/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<!-- general -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<jdk.version>1.6</jdk.version>
		<compiler-plugin.version>2.3.2</compiler-plugin.version>

		<!-- plugins -->
		<eclipse-lifecycle-mapping.version>1.0.0</eclipse-lifecycle-mapping.version>
		<resources-plugin.version>2.4.3</resources-plugin.version>
		<failsafe-plugin.version>2.12</failsafe-plugin.version>
		<surefire-plugin.version>2.12</surefire-plugin.version>
		<war-plugin.version>2.2</war-plugin.version>
		<jetty-plugin.version>6.1.26</jetty-plugin.version>
		<jasmine-plugin.version>1.1.0</jasmine-plugin.version>

		<!-- dependency versions -->
		<junit.version>4.10</junit.version>
		<mockito.version>1.8.4</mockito.version>
		<fest-assert.version>1.4</fest-assert.version>
		<hamcrest.version>1.1</hamcrest.version>
		<h2.version>1.3.164</h2.version>
		<spring.version>3.1.0.RELEASE</spring.version>
		<spring.test-mvc.version>1.0.0.BUILD-SNAPSHOT</spring.test-mvc.version>
		<servlet-api.version>2.5</servlet-api.version>
		<validation-api.version>1.0.0.GA</validation-api.version>
		<hibernate-jpa-api.version>1.0.1.Final</hibernate-jpa-api.version>
		<hibernate.version>4.0.1.Final</hibernate.version>
		<cglib.version>2.2.2</cglib.version>
		<hibernate-validator.version>4.2.0.Final</hibernate-validator.version>
		<mysql-connector-java.version>5.1.18</mysql-connector-java.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<javax-mail.version>1.4</javax-mail.version>
		<guava.version>11.0.1</guava.version>
		<joda-time.version>2.0</joda-time.version>
		<usertype-jodatime.version>2.0</usertype-jodatime.version>
		<liquibase.version>2.0.3</liquibase.version>
		<env.file>environments/current-liquibase.properties</env.file>
		<liquibase.prompt-when-remote>true</liquibase.prompt-when-remote>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>1.1.2</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax-mail.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jadira.usertype</groupId>
				<artifactId>usertype.jodatime</artifactId>
				<version>${usertype-jodatime.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test-mvc</artifactId>
				<version>${spring.test-mvc.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-openid</artifactId>
				<version>${spring.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>${hibernate-jpa-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easytesting</groupId>
				<artifactId>fest-assert</artifactId>
				<version>${fest-assert.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>esporx_tv</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe-plugin.version}</version>
				<configuration>
					<forkMode>perthread</forkMode>
					<parallel>classes</parallel>
					<threadCount>4</threadCount>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.cloudbees</groupId>
				<artifactId>bees-maven-plugin</artifactId>
				<version>1.0-SNAPSHOT</version>
				<configuration>
					<port>9998</port>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${eclipse-lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-resources-plugin</artifactId>
										<versionRange>${resources-plugin.version}</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>testResources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${war-plugin.version}</version>
					<configuration>
						<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>${jetty-plugin.version}</version>
					<configuration>
						<contextPath>/</contextPath>
						<reload>manual</reload>
						<connectors>
							<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
								<port>9999</port>
								<maxIdleTime>60000</maxIdleTime>
							</connector>
						</connectors>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>${liquibase.version}</version>
					<configuration>
						<promptOnNonLocalDatabase>${liquibase.prompt-when-remote}</promptOnNonLocalDatabase>
						<changeLogFile>src/main/resources/tv/esporx/master.xml</changeLogFile>
						<propertyFile>${env.file}</propertyFile>
					</configuration>
					<executions>
						<execution>
							<phase>process-resources</phase>
							<goals>
								<goal>updateSQL</goal>
								<goal>update</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.github.searls</groupId>
					<artifactId>jasmine-maven-plugin</artifactId>
					<version>${jasmine-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<jsSrcDir>src/main/webapp/static/js</jsSrcDir>
						<sourceIncludes>
							<include>ext/simulate.js</include>
							<include>ext/prototype.js</include>
							<include>lib/*.js</include>
							<include>pages/*.js</include>
						</sourceIncludes>
						<sourceExcludes>
							<exclude>ext/*.js</exclude>
							<exclude>ext/ckeditor/*.js</exclude>
							<exclude>ext/ckeditor/**/*.js</exclude>
						</sourceExcludes>
						<preloadSources>
							<source>ext/prototype.js</source>
							<source>ext/modernizr.js</source>
							<source>lib/logger.js</source>
							<source>lib/sanityChecker.js</source>
							<source>ext/simulate.js</source>
						</preloadSources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.cloudbees</groupId>
						<artifactId>bees-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.cloudbees</groupId>
						<artifactId>bees-maven-plugin</artifactId>
						<configuration>
							<environment>prod</environment>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
