<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- order matters here! -->
    <http pattern="/static/landing/**" security="none" />
    <http pattern="/favicon.ico" security="none"/>
    <http pattern="/static/img/**" security="none"/>
    <http pattern="/s/**" security="none"/>
    <http pattern="/" security="none" />

	<http auto-config='true' use-expressions='true' realm="esporx.tv: your premium live esports broadcasts">
		<form-login   login-page="/admin/login"
		              default-target-url="/home"
		              authentication-failure-url="/admin/login" />

        <logout logout-success-url="/admin/login" />

        <intercept-url pattern="/admin/login" access="isAnonymous()" />
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/user/register" access="isAnonymous()" />
        <intercept-url pattern="/user/confirm" access="isAnonymous()" />
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
	</http>

    <beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <beans:constructor-arg value="runNingMarm3l4d3Sh0e" />
    </beans:bean>

    <beans:bean id="userService" class="tv.esporx.services.EsporxerService" />

	<authentication-manager>
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>
